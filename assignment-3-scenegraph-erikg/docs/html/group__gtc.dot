digraph "GTC Extensions (Stable)"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir=LR;
  Node11 [label="GLM_GTC_noise",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__gtc__noise.html",tooltip="Defines 2D, 3D and 4D procedural noise functions Based on the work of Stefan Gustavson and Ashima Art..."];
  Node0 [label="GTC Extensions (Stable)",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node15 [label="GLM_GTC_reciprocal",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__gtc__reciprocal.html",tooltip="Define secant, cosecant and cotangent functions. "];
  Node4 [label="GLM_GTC_epsilon",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__gtc__epsilon.html",tooltip="Comparison functions for a user defined epsilon values. "];
  Node14 [label="GLM_GTC_random",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__gtc__random.html",tooltip="Generate random number from various distribution methods. "];
  Node9 [label="GLM_GTC_matrix_inverse",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__gtc__matrix__inverse.html",tooltip="Defines additional matrix inverting functions. "];
  Node20 [label="GLM_GTC_ulp",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__gtc__ulp.html",tooltip="Allow the measurement of the accuracy of a function against a reference implementation. "];
  Node8 [label="GLM_GTC_matrix_integer",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__gtc__matrix__integer.html",tooltip="Defines a number of matrices with integer types. "];
  Node3 [label="GLM_GTC_constants",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__gtc__constants.html",tooltip="Provide a list of constants and precomputed useful values. "];
  Node1 [label="GLM_GTC_bitfield",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__gtc__bitfield.html",tooltip="Allow to perform bit operations on integer values. "];
  Node19 [label="GLM_GTC_type_ptr",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__gtc__type__ptr.html",tooltip="Handles the interaction between pointers and vector, matrix types. "];
  Node21 [label="GLM_GTC_vec1",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__gtc__vec1.html",tooltip="Add vec1, ivec1, uvec1 and bvec1 types. "];
  Node17 [label="GLM_GTC_type_aligned",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__gtc__type__aligned.html",tooltip="Aligned types. "];
  Node5 [label="GLM_GTC_functions",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__gtc__functions.html",tooltip="List of useful common functions. "];
  Node6 [label="GLM_GTC_integer",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__gtc__integer.html",tooltip="Allow to perform bit operations on integer values. "];
  Node12 [label="GLM_GTC_packing",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__gtc__packing.html",tooltip="This extension provides a set of function to convert vertors to packed formats. "];
  Node10 [label="GLM_GTC_matrix_transform",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__gtc__matrix__transform.html",tooltip="Defines functions that generate common transformation matrices. "];
  Node16 [label="GLM_GTC_round",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__gtc__round.html",tooltip="rounding value to specific boundings "];
  Node7 [label="GLM_GTC_matrix_access",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__gtc__matrix__access.html",tooltip="Defines functions to access rows or columns of a matrix easily. "];
  Node13 [label="GLM_GTC_quaternion",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__gtc__quaternion.html",tooltip="Defines a templated quaternion type and several quaternion operations. "];
  Node2 [label="GLM_GTC_color_space",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__gtc__color__space.html",tooltip="Allow to perform bit operations on integer values. "];
  Node18 [label="GLM_GTC_type_precision",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__gtc__type__precision.html",tooltip="Defines specific C++-based precision types. "];
  Node0->Node1 [shape=plaintext, dir="back", style="solid"];
  Node0->Node2 [shape=plaintext, dir="back", style="solid"];
  Node0->Node3 [shape=plaintext, dir="back", style="solid"];
  Node0->Node4 [shape=plaintext, dir="back", style="solid"];
  Node0->Node5 [shape=plaintext, dir="back", style="solid"];
  Node0->Node6 [shape=plaintext, dir="back", style="solid"];
  Node0->Node7 [shape=plaintext, dir="back", style="solid"];
  Node0->Node8 [shape=plaintext, dir="back", style="solid"];
  Node0->Node9 [shape=plaintext, dir="back", style="solid"];
  Node0->Node10 [shape=plaintext, dir="back", style="solid"];
  Node0->Node11 [shape=plaintext, dir="back", style="solid"];
  Node0->Node12 [shape=plaintext, dir="back", style="solid"];
  Node0->Node13 [shape=plaintext, dir="back", style="solid"];
  Node0->Node14 [shape=plaintext, dir="back", style="solid"];
  Node0->Node15 [shape=plaintext, dir="back", style="solid"];
  Node0->Node16 [shape=plaintext, dir="back", style="solid"];
  Node0->Node17 [shape=plaintext, dir="back", style="solid"];
  Node0->Node18 [shape=plaintext, dir="back", style="solid"];
  Node0->Node19 [shape=plaintext, dir="back", style="solid"];
  Node0->Node20 [shape=plaintext, dir="back", style="solid"];
  Node0->Node21 [shape=plaintext, dir="back", style="solid"];
}
